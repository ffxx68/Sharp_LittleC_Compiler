; set / reset pixel on screen
; input 
;  X-low as x-position on screen (0 = left)
;  Y-low as y-position on screen (0 = top)
;  K (0x08) mode: 1: set; 0: reset
LCD_PC1403LIB_PSET:

	LP 4
	EXAM Xl --> A
	CPIA 120
	JRCP lcd_pc1403lib_lb0 ; ok
	; A>120 not allowed 
	RTN
	
lcd_pc1403lib_lb0:
	; calc address --> X
	CALL lcd_pc1403lib_map
	
	; calc mask --> A
	LP 6
	EXAM
	EXAB ; Yl -> B
	LIA 1
	LII 6  ; vertical pixel count (7 max)
	LP 0   ; I
lcd_pc1403lib_lb1:
	EXAB
	CPMA   ; comparing B with I
	EXAB
	JRZP lcd_pc1403lib_lb2 ; B=I
	SL
	DECI
	JRNZM lcd_pc1403lib_lb1
	; B>6 impossible
	RTN

lcd_pc1403lib_lb2:
	; get pixel at X with mask in A
	EXAB ; move A (mask) to B
	DX
	IXL  ; get LCD byte (X) -> A, X -> DP

	; select mode
	LP 0x08   ; K   
	CPIM 0x01 ; 1 = set pixel
	JRZP lcd_pc1403lib_set
	CPIM 0x00 ; 0 = clear pixel
	JRZP lcd_pc1403lib_clear
	; mode not allowed
	RTN
	
lcd_pc1403lib_set:
	LP 3 ; B (mask)
	ORMA ; B V A -> B = set mask bit
	EXAB
	STD  ; A -> (DP)
	RTN
	
lcd_pc1403lib_clear:
	

    ; TO DO . . .	


	RTN

; input with A as x-position on screen (0 = left)
; return with X as address of corresponding LCD position
lcd_pc1403lib_map:

	; calc table pointer, from x-lcd position in A
	EXAB  ; save A
	LP 4  ;  X-low
	LIA LB(lcd_pc1403lib_memmap)
	EXAM
	LP 5  ; X-high
	LIA HB(lcd_pc1403lib_memmap)
	EXAM
	EXAB  ; restore A
	LIB 0
	LP 4
	ADB   ; X + 0:A -> X
	
	; extract address from table
	DX
	IXL   ; (X) -> A
	LP 4  ; X-low
	EXAM
	
	LP 5       ; X-high
	ANIM 0x00  ; 0 -> X high
	ORIM 0x30  ; 0x30 -> X high = LCD mem high
	
	RTN

lcd_pc1403lib_memmap:
.DB 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
.DB 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x2D, 0x2E
.DB 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x1E, 0x1F, 0x20
.DB 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x6C, 0x6B, 0x6A, 0x69
.DB 0x68, 0x67, 0x66, 0x65, 0x64, 0x63, 0x62, 0x61, 0x60, 0x5F, 0x5E, 0x7B, 0x7A, 0x79, 0x78, 0x77
.DB 0x76, 0x75, 0x74, 0x73, 0x72, 0x71, 0x70, 0x6F, 0x6E, 0x6D, 0x5D, 0x5C, 0x5B, 0x5A, 0x59, 0x58
.DB 0x57, 0x56, 0x55, 0x54, 0x53, 0x52, 0x51, 0x50, 0x4F, 0x4E, 0x4D, 0x4C, 0x4B, 0x4A, 0x49, 0x48
.DB 0x47, 0x46, 0x45, 0x44, 0x43, 0x42, 0x41, 0x40
